<?php



class UsersController extends \BaseController
{
    /**
     * Constructor
     */
    protected $layout = 'layouts.base';


    public function __construct()
    {
        $this->beforeFilter('csrf', array('on' => 'post'));
        $this->beforeFilter('auth', array('only' => array('getDashboard')));
    }

    /**
     * getLogin
     */
    public function getLogin()
    {
        $this->layout->content = View::make('users.login');
    }


    /**
     * getLogin
     */
    public function getRegister()
    {
        $this->layout->content = View::make('users.register');
    }

    /**
     * postSignin
     */
    public function postSignin()
    {
		// validate the info, create rules for the inputs
		$rules = array(
			'email'    => 'required|email', // make sure the email is an actual email
			'password' => 'required|min:3' // password can only be alphanumeric and has to be greater than 3 characters
		);

		// run the validation rules on the inputs from the form
		$validator = Validator::make(Input::all(), $rules);

		// if the validator fails, redirect back to the form
		if ($validator->fails()) {
			return Redirect::to('users/login')
				->withErrors($validator) // send back all errors to the login form
				->withInput(Input::except('password')); // send back the input (not the password) so that we can repopulate the form
		} else {

			// create our user data for the authentication
			$userdata = array(
				'email' 	=> Input::get('email'),
				'password' 	=> Input::get('password')
			);

			// attempt to do the login
			if (Auth::attempt($userdata)) {

				// validation successful!
				// redirect them to the secure section or whatever
				// return Redirect::to('secure');
				// for now we'll just echo success (even though echoing in a controller is bad)
				echo 'SUCCESS!';

			} else {

				// validation not successful, send back to form
				return Redirect::to('users/login');

			}

		}
	}
    /**
     * getLogout
     */
    public function getLogout()
    {
        Auth::logout();

        return Redirect::to('/')
            ->with('flash_notice', "You have successfully logged out.");
    }

    public function store()
     {
            $data =  Input::except(array('_token')) ;
            $rule  =  array(
                    'username'       => 'required|unique:users',
                    'email'      => 'required|email|unique:users',
                    'password'   => 'required|min:6|same:cpassword',
                    'cpassword'  => 'required|min:6'
                ) ;
            $message = array(
                   'cpassword.required' => 'The confirm password field is required.',
                   'cpassword.min'      => 'The confirm password must be at least 6 characters',
                   'password.same'      => 'The :attribute and confirm password field must match.',
               );
            $validator = Validator::make($data,$rule, $message);

            if ($validator->fails())
            {
                    return Redirect::to('users/register')
                            ->withErrors($validator->messages());
            }
            else
            {
                    User::saveFormData(Input::except(array('_token','cpassword')));

                    return Redirect::to('users/register')
                            ->withMessage('Data inserted');
            }
    }
}
